// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package eveapi.xml.char.CharacterInfo


case class Eveapi(currentTime: String,
  result: eveapi.xml.char.CharacterInfo.Result,
  cachedUntil: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val version = attributes("@version").as[BigInt]
}

      


case class Result(characterID: BigInt,
  name: String,
  homeStationID: BigInt,
  DoB: String,
  race: String,
  bloodLine: String,
  ancestry: String,
  gender: String,
  corporationName: String,
  corporationID: BigInt,
  allianceName: String,
  allianceID: BigInt,
  factionName: eveapi.xml.char.CharacterInfo.FactionName,
  factionID: BigInt,
  cloneTypeID: BigInt,
  cloneName: String,
  cloneSkillPoints: BigInt,
  freeSkillPoints: BigInt,
  freeRespecs: BigInt,
  cloneJumpDate: String,
  lastRespecDate: String,
  lastTimedRespec: String,
  remoteStationDate: String,
  resultoption: Seq[scalaxb.DataRecord[Any]] = Nil)
      

trait ResultOption

case class FactionName()
      


case class AttributesType(intelligence: BigInt,
  memory: BigInt,
  charisma: BigInt,
  perception: BigInt,
  willpower: BigInt)
      


case class Rowset(row: Seq[eveapi.xml.char.CharacterInfo.Row] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val columns = attributes("@columns").as[String]
  lazy val key = attributes("@key").as[String]
  lazy val name = attributes("@name").as[String]
}

      


case class Row(attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val cloneName = attributes.get("@cloneName") map { _.as[String] }
  lazy val jumpCloneID = attributes.get("@jumpCloneID") map { _.as[BigInt] }
  lazy val level = attributes.get("@level") map { _.as[BigInt] }
  lazy val locationID = attributes.get("@locationID") map { _.as[BigInt] }
  lazy val published = attributes.get("@published") map { _.as[BigInt] }
  lazy val roleID = attributes.get("@roleID") map { _.as[BigInt] }
  lazy val roleName = attributes.get("@roleName") map { _.as[String] }
  lazy val skillpoints = attributes.get("@skillpoints") map { _.as[BigInt] }
  lazy val titleID = attributes.get("@titleID") map { _.as[BigInt] }
  lazy val titleName = attributes.get("@titleName") map { _.as[String] }
  lazy val typeID = attributes.get("@typeID") map { _.as[BigInt] }
  lazy val typeName = attributes.get("@typeName") map { _.as[String] }
}

      

